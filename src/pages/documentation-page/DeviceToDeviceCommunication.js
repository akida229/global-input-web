import React from 'react';
import {Link} from 'react-router-dom';
import {styles,images} from './styles';



export default class DeviceToDeviceCommunication extends React.Component{

  static menu={
        id:"deviceToDevice",
        label:"Device-to-Device Communication"
  }
  render(){
    const {P, Title, Code,Concept, FirstSection,NextSection}=this.props.theme;
    return(
        <React.Fragment>
          <FirstSection>
          <Title>Device-to-Device Communication</Title>

                <P>
                    Global Input App provides applications with a device-to-device communication secured with
                    end-to-end encryption supported by an <Concept>Encrypted QR Code</Concept>.

                </P>
                <P>
                  The QR Code contains a <Concept>one-time-use encryption key</Concept> for initiating the the end-to-end encrypted communication.
                  The Global Input App scans the QR code to obtain the encryption key,
                  which is generated by the application on-the-fly. This means that they key is captured via camera instead of
                  transferring electronically. Hence, even if the HTTPS communication is compromised by using a compromised
                  CA (Certificate Authority) and an active MitM (man-in-the-middle) attack, the communication will be still secure.
                </P>
                <P>
                    The QR code also contains channel information for reaching the application. For example, the URL to a WebSocket proxy server, which is responsible for routing the encrypted messages to the target. You can run your own open-source WebSocket server or use our instances for free.
                </P>
                <P>
                    This mechanism allows you to implement the integration logic across multiple device applications within the client device application without adding any extra server-side business logic, and the communication is secured with device-to-device encryption, initiated by scanning an encrypted QR code.
                </P>
          </FirstSection>

      </React.Fragment>
    );
  }


}
